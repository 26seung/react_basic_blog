React 진행사항..

-- 1강 <
다운필요 - ( nodeJs )   -> npm 프로그램 & create-react-app 사용을 위하여 설치

리액트 프로젝트 생성은 터미널 내부 -> `npx create-react-app 프로젝명 입력` 
npx 는 라이브러리 설치를 도와주는 명령어 

미리보기 띄우기는 터미널 내부 -> npm start 입력


파일 내부 구성..
App.js  -> 는 메인페이지에 들어갈 HTML 짜는 곳
public / index.html  -> 이 메인페이지
index.js  -> 을 이용하여 App.js  에서 public / index.html  로 전달
node_modules  -> 라이브러리 모은 폴더
public 폴더 -> static 파일 보관함  (동적으로 바뀌지 않는 파일들을 모음)
src 폴더  -> 소스코드 보관함
package.json  -> 설치한 라이브러리 목록
>

-- 2강 <
1. 태그에 class 를 주고 싶으면 -> className="클래스명"

2. 리액트에서 데이터 바인딩이 쉬움
서버에서 받아온 데이터를  html 에 넣어주는게 데이터 바인딩이라고 함

간편하게 사용가능  -> { 변수명, 함수 등 } 를 사용하면 변수를 넣어줄수 있음
이미지 사용  ->  <img src= { '변수명' } />    으로 사용
style 속성 사용  ->  style={ {color:'blue'} }  으로 사용 .. className 으로 사용하는게 편리
>

-- 3강 <
1. 리액트의 데이터 저장공간 state 사용
            -> import React, {useState} from 'react';
        기입 하여 사용 useState 라는 React 내부 함수를 가져다 쓰겠다는 내용
2. useState()  을 이용해 만들어야 함

3. 문자, 숫자, array,object 다 저장가능

4. state 에 데이터 저장하는 이유 : state 는 변경되면 HTML 이 자동으로 (새로고침X) 재렌더링이 된다. 
    자주 바뀌는 정보는 state로 저장하는게 유용.

>

-- 4강 <
1. 터미널에 뜨는 warning 같은 문구 보기 싫으면 상단에  -> /* eslint-disable */ 



>

-- 5강 <
1.  데이터를 수정할 때는 state 의 복사본을 만들어서 수정해야 함
deep copy 를 사용해야 함  -> [...글제목] 같이 ... 사용

2.  Array, Object state 데이터 수정방법  
            -> 변경 함수 사용해야 함.. 변경함수(대체할데이터)
                state 는 직접 건들지 말아야 함.. deep copy 해서 건들여야 함
                
>

-- 6강 <
1.  Component 만드는 법     -->     함수를 만들고 그 안에 내용을 넣고 함수를 사용
                return 안에는 여러개의 div 가 들어가면 안된다 ,, 그러므로 컴포넌트를 활용하여 정리

>